import pandas as pd
import numpy as np

def input_loan_details():
    amount = float(input("Enter loan amount: "))
    annual_rate = float(input("Enter annual interest rate (as a percent): ")) / 100
    years = int(input("Enter loan term in years: "))
    return amount, annual_rate, years

def calculate_monthly_payment(amount, annual_rate, years):
    n = years * 12
    r = annual_rate / 12
    P = amount
    monthly_payment = (P * r * (1 + r) ** n) / ((1 + r) ** n - 1)
    return monthly_payment

def generate_amortization_schedule(amount, annual_rate, years):
    monthly_payment = calculate_monthly_payment(amount, annual_rate, years)
    schedule = []
    balance = amount
    for i in range(1, years * 12 + 1):
        interest = balance * (annual_rate / 12)
        principal = monthly_payment - interest
        balance -= principal
        if balance >= 0:
            schedule.append((i, round(monthly_payment, 2), round(principal, 2), round(interest, 2), round(balance, 2)))
        else:
            schedule.append((i, round(monthly_payment, 2), round(principal, 2), round(interest, 2), 0))
            break 
            
        if balance == 0:
            break
    
    return schedule

def display_schedule(schedule):
    print("Amortization Schedule:")
    print("{:<12} {:<12} {:<12} {:<12} {:<12}".format("Installment", "Payment", "Principal", "Interest", "Balance"))
    for entry in schedule:
        print("{:<12} {:<12.2f} {:<12.2f} {:<12.2f} {:<12.2f}".format(*entry))

def main():
    amount, annual_rate, years = input_loan_details()
    schedule = generate_amortization_schedule(amount, annual_rate, years)
    display_schedule(schedule)

if __name__ == "__main__":
    main()
